I"I<h2 id="brew也叫-homebrew">brew(也叫 Homebrew)</h2>

<p><a href="http://brew.sh/">参考链接</a></p>

<p><strong>安装</strong><br />
安装方法：
  打开terminal，
  输入命令：</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"
</code></pre></div></div>
<p><strong>cmd</strong>
使用brew安装软件</p>

<p>一个命令搞定，比如安装git</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew install git
</code></pre></div></div>

<p>使用brew卸载软件</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew uninstall wget
</code></pre></div></div>

<p>使用brew查询软件</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew search /wge*/
</code></pre></div></div>
<p>/wge*/是个正则表达式，需要包含在/中</p>

<p>其它brew命令:</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew list 列出已安装的软件
brew update 更新brew
brew home 用浏览器打开brew的官网
brew info 显示软件的信息
brew deps 显示包依赖
</code></pre></div></div>

<h2 id="homebrew-cask">Homebrew-cask</h2>

<p>homebrew-cask<a href="">官网传送</a></p>

<p>是一套建立在homebrew基础上的Mac软件安装命令行工具。与brew的区别就是，后者侧重于软件套件和软件环境的配置安装，而前者是mac平台软件。</p>

<p><strong>安装步骤</strong></p>

<ol>
  <li>安装Xcode(Mac App Store 免费一键下载)</li>
  <li>安装homebrew(上面介绍的一行命令搞定)</li>
  <li>安装homebrew-cask(也是一行命令搞定)</li>
  <li>brew install caskroom/cask/brew-cask</li>
</ol>

<p><strong>homebrew-cask 的使用</strong></p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew cask install XXX ,将XXX替换成你想要安装的软件名称即可install
brew cask search 列出所有可以被安装的软件
brew cask search drop 查找所有和drop相关的应用
brew cask info thunder 查看 迅雷 应用的信息
brew cask uninstall qq 卸载 QQ
</code></pre></div></div>

<p>软件更新<br />
homebrew-cask作为软件安装工具体验是不错的（相比你要自己到网页上搜索，下载，拖转安装）
大部分软件都有自更新的功能，体验也不错，绝大多数只需要一次点击就能更新
实际上软件更新没有那么频繁，使用brew cask uninstall qq &amp;&amp; brew cask install qq 也比上网自己下载更新方便</p>

<p><strong>特别注意</strong>
homebrew-cask 是将应用程序放置在/opt/homebrew-cask/Caskroom/下，会在你的家目录中的「应用程序」文件夹中创建一个类似快捷方式的替身。在Finder的偏好设置中，第三个侧边栏勾选上你的家目录，这样找应用会方便一些。但不用太担心你，Launchpad是会找到这个目录下的应用的，需要Alfred支持请查看brew cask alfred。</p>

<p>###终极shell，zsh</p>

<p>参考链接：<a href="http://macshuo.com/?p=676">MacTalk-池建强</a></p>

<p>查看本机已有的shell<br />
<code class="highlighter-rouge">cat /etc/shells</code>
显示如下：</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/bin/bash
/bin/csh
/bin/sh
/bin/ksh
/bin/tcsh
/bin/zsh
</code></pre></div></div>
<p>在linux里执行这个命令和mac略有不同，会多一个zsh，也就是mac预装了这个shell</p>

<p>zsh牛人
国外有位程序有对该shell做了配置，方便了其他的使用，使得该shell得以新手快速使用。发布在github上的项目名【oh my zsh】。</p>

<p>安装 oh my zsh 项目
自动安装：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>wget https://github.com/robbyrussell/oh-my-zsh/raw/master/tools/install.sh -O - | sh
</code></pre></div></div>

<p>手动安装：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git clone git://github.com/robbyrussell/oh-my-zsh.git ~/.oh-my-zsh
cp ~/.oh-my-zsh/templates/zshrc.zsh-template ~/.zshrc

</code></pre></div></div>

<p>配置</p>

<p>zsh 的配置主要集中在用户当前目录的.zshrc里，用 vim 或你喜欢的其他编辑器打开.zshrc，在最下面会发现这么一行字：</p>

<p><code class="highlighter-rouge"># Customize to your needs…</code></p>

<p>可以在此处定义自己的环境变量和别名，当然，oh my zsh 在安装时已经自动读取当前的环境变量并进行了设置，你可以继续追加其他环境变量。
接下来进行别名的设置，我自己的部分配置如下：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
alias cls='clear'
alias ll='ls -l'
alias la='ls -a'
alias vi='vim'
alias javac="javac -J-Dfile.encoding=utf8"
alias grep="grep --color=auto"
alias -s html=mate   # 在命令行直接输入后缀为 html 的文件名，会在 TextMate 中打开
alias -s rb=mate     # 在命令行直接输入 ruby 文件，会在 TextMate 中打开
alias -s py=vi       # 在命令行直接输入 python 文件，会用 vim 中打开，以下类似
alias -s js=vi
alias -s c=vi
alias -s java=vi
alias -s txt=vi
alias -s gz='tar -xzvf'
alias -s tgz='tar -xzvf'
alias -s zip='unzip'
alias -s bz2='tar -xjvf'

</code></pre></div></div>

<p>使用 zsh</p>

<p><strong>兼容 bash</strong>，原来使用 bash 的兄弟切换过来毫无压力，该咋用咋用。</p>

<p><strong>强大的历史纪录功能</strong>，输入 grep 然后用上下箭头可以翻阅你执行的所有 grep 命令。</p>

<p><strong>智能拼写纠正</strong>，输入gtep mactalk * -R，系统会提示：zsh: correct ‘gtep’ to ‘grep’ [nyae]? 比妹纸贴心吧，她们向来都是让你猜的……</p>

<p><strong>各种补全</strong>：路径补全、命令补全，命令参数补全，插件内容补全等等。触发补全只需要按一下或两下 tab 键，补全项可以使用 ctrl+n/p/f/b上下左右切换。比如你想杀掉 java 的进程，只需要输入 kill java + tab键，如果只有一个 java 进程，zsh 会自动替换为进程的 pid，如果有多个则会出现选择项供你选择。ssh + 空格 + 两个tab键，zsh会列出所有访问过的主机和用户名进行补全</p>

<p><strong>智能跳转</strong>，安装了autojump之后，zsh 会自动记录你访问过的目录，通过 j + 目录名 可以直接进行目录跳转，而且目录名支持模糊匹配和自动补全，例如你访问过hadoop-1.0.0目录，输入j hado 即可正确跳转。j –stat 可以看你的历史路径库。</p>

<p><strong>目录浏览和跳转</strong>：输入 d，即可列出你在这个会话里访问的目录列表，输入列表前的序号，即可直接跳转。
在当前目录下输入 .. 或 … ，或直接输入当前目录名都可以跳转，你甚至不再需要输入 cd 命令了。
通配符搜索：ls -l */.sh，可以递归显示当前目录下的 shell 文件，文件少时可以代替 find，文件太多就歇菜了。</p>

<hr />
:ET