<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2051" height="490" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 2051 490"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M607.5,60.5v30h-537.5V110.5"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M40.5,136.5V182.5L60.5,182.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M40.5,136.5V234.5L60.5,234.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M80.5,245.5V286.5L100.5,286.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M80.5,245.5V338.5L100.5,338.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M80.5,245.5V390.5L100.5,390.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M40.5,136.5V442.5L60.5,442.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M607.5,60.5v30h217.5V126.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M802.5,152.5V198.5L869.5,198.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M802.5,152.5V255.5L871.5,255.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M802.5,152.5V301.5L882.5,301.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M802.5,152.5V355.5L885.5,355.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M607.5,60.5v30h795.5V127.5"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1380.5,153.5V199.5L1400.5,199.5"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1380.5,153.5V251.5L1400.5,251.5"></path><path id="kity_path_61" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1380.5,153.5V303.5L1400.5,303.5"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1420.5,314.5V355.5L1440.5,355.5"></path><path id="kity_path_65" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1380.5,153.5V407.5L1400.5,407.5"></path><path id="kity_path_67" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1420.5,418.5V459.5L1440.5,459.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(57, 80, 96)" d="M513.5,20.5h188a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-188a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="30.09999990463257" x="532.5">golang基础之RPC包</text></g></g><g id="kity_g_12"><path id="kity_path_13" fill="none" stroke="none" d="M532.5,40.5h0v0h0z"></path></g><g id="kity_g_14"><path id="kity_path_15" fill="none" stroke="none" d="M532.5,40.5h0v0h0z"></path><path id="kity_path_16" fill="none" stroke="none"></path></g><g id="minder_node2"><g id="node_expander7" style="cursor: pointer;"><path id="kity_path_144" fill="white" stroke="gray" d="M76,103.5A6,6,0,1,1,64,103.5A6,6,0,1,1,76,103.5"></path><path id="kity_path_145" fill="none" stroke="gray" d="M65.5,103.5L74.5,103.5"></path></g><path id="node_outline8" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M23.5,110.5h93a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-93a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text8" fill="black"><text id="kity_text_81" text-rendering="inherit" font-size="14" dy=".8em" y="114.40000009536743" x="40.5">注意事项</text></g></g><g id="minder_node3"><g id="node_expander1" display="none" style="cursor: pointer;"><path id="kity_path_126" fill="white" stroke="gray" d="M60.5,182.5A6,6,0,1,1,48.5,182.5A6,6,0,1,1,60.5,182.5"></path><path id="kity_path_127" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M65.5,171.5h166a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-166a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_69" text-rendering="inherit" font-size="12" dy=".8em" y="174.70000004768372" x="70.5">Go 的RPC只支持go写的系统</text></g></g><g id="minder_node4"><g id="node_expander5" style="cursor: pointer;"><path id="kity_path_138" fill="white" stroke="gray" d="M60.5,234.5A6,6,0,1,1,48.5,234.5A6,6,0,1,1,60.5,234.5"></path><path id="kity_path_139" fill="none" stroke="gray" d="M50,234.5L59,234.5"></path></g><path id="node_outline6" fill="none" stroke="none" d="M65.5,223.5h161a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-161a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text6" fill="black"><text id="kity_text_77" text-rendering="inherit" font-size="12" dy=".8em" y="226.70000004768372" x="70.5">Go RPC的函数有特殊要求：</text></g></g><g id="minder_node5"><g id="node_expander2" display="none" style="cursor: pointer;"><path id="kity_path_129" fill="white" stroke="gray" d="M100.5,286.5A6,6,0,1,1,88.5,286.5A6,6,0,1,1,100.5,286.5"></path><path id="kity_path_130" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="none" stroke="none" d="M105.5,275.5h118a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-118a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text3" fill="black"><text id="kity_text_71" text-rendering="inherit" font-size="12" dy=".8em" y="278.7000000476837" x="110.5">函数首字母必须大写</text></g></g><g id="minder_node6"><g id="node_expander3" display="none" style="cursor: pointer;"><path id="kity_path_132" fill="white" stroke="gray" d="M100.5,338.5A6,6,0,1,1,88.5,338.5A6,6,0,1,1,100.5,338.5"></path><path id="kity_path_133" fill="none" stroke="gray"></path></g><path id="node_outline4" fill="none" stroke="none" d="M105.5,327.5h603a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-603a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text4" fill="black"><text id="kity_text_73" text-rendering="inherit" font-size="12" dy=".8em" y="330.7000000476837" x="110.5">必须只有两个参数&#xa0;第一个参数是接收的参数，第二个参数是返回给客户端的参数，第二个参数必须是指针类型的</text></g></g><g id="minder_node7"><g id="node_expander4" display="none" style="cursor: pointer;"><path id="kity_path_135" fill="white" stroke="gray" d="M100.5,390.5A6,6,0,1,1,88.5,390.5A6,6,0,1,1,100.5,390.5"></path><path id="kity_path_136" fill="none" stroke="gray"></path></g><path id="node_outline5" fill="none" stroke="none" d="M105.5,379.5h159a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-159a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text5" fill="black"><text id="kity_text_75" text-rendering="inherit" font-size="12" dy=".8em" y="382.7000000476837" x="110.5">函数还要有一个返回值error</text></g></g><g id="minder_node8"><g id="node_expander6" display="none" style="cursor: pointer;"><path id="kity_path_141" fill="white" stroke="gray" d="M60.5,442.5A6,6,0,1,1,48.5,442.5A6,6,0,1,1,60.5,442.5"></path><path id="kity_path_142" fill="none" stroke="gray"></path></g><path id="node_outline7" fill="none" stroke="none" d="M65.5,431.5h368a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-368a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text7" fill="black"><text id="kity_text_79" text-rendering="inherit" font-size="12" dy=".8em" y="434.7000000476837" x="70.5">举例 func (t *T) MethodName(argType T1, replyType *T2) error</text></g></g><g id="minder_node9"><g id="node_expander12" style="cursor: pointer;"><path id="kity_path_159" fill="white" stroke="gray" d="M831,119.5A6,6,0,1,1,819,119.5A6,6,0,1,1,831,119.5"></path><path id="kity_path_160" fill="none" stroke="gray" d="M820.5,119.5L829.5,119.5"></path></g><path id="node_outline13" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M785.5,126.5h79a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-79a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text13" fill="black"><text id="kity_text_91" text-rendering="inherit" font-size="14" dy=".8em" y="130.40000009536743" x="802.5">服务端</text></g></g><g id="minder_node10"><g id="node_expander8" display="none" style="cursor: pointer;"><path id="kity_path_147" fill="white" stroke="gray" d="M869.5,198.5A6,6,0,1,1,857.5,198.5A6,6,0,1,1,869.5,198.5"></path><path id="kity_path_148" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M874.5,187.5h196a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-196a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_83" text-rendering="inherit" font-size="12" dy=".8em" y="190.70000004768372" x="879.5">rpc.Regist(new(符合rpc的结构体))</text></g></g><g id="minder_node11"><g id="node_expander9" display="none" style="cursor: pointer;"><path id="kity_path_150" fill="white" stroke="gray" d="M871.5,255.5A6,6,0,1,1,859.5,255.5A6,6,0,1,1,871.5,255.5"></path><path id="kity_path_151" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="none" stroke="none" d="M876.5,244.5h266a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-266a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text10" fill="black"><text id="kity_text_85" text-rendering="inherit" font-size="12" dy=".8em" y="247.70000004768372" x="881.5">rpc.HandleHTTP() 借用http协议来作为rpc载体</text></g></g><g id="minder_node12"><g id="node_expander10" display="none" style="cursor: pointer;"><path id="kity_path_153" fill="white" stroke="gray" d="M882.5,301.5A6,6,0,1,1,870.5,301.5A6,6,0,1,1,882.5,301.5"></path><path id="kity_path_154" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M887.5,290.5h232a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-232a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_87" text-rendering="inherit" font-size="12" dy=".8em" y="293.7000000476837" x="892.5">net.Listen("tcp",":1234") 创建一个lesten</text></g></g><g id="minder_node13"><g id="node_expander11" display="none" style="cursor: pointer;"><path id="kity_path_156" fill="white" stroke="gray" d="M885.5,355.5A6,6,0,1,1,873.5,355.5A6,6,0,1,1,885.5,355.5"></path><path id="kity_path_157" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="none" stroke="none" d="M890.5,344.5h150a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-150a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text12" fill="black"><text id="kity_text_89" text-rendering="inherit" font-size="12" dy=".8em" y="347.7000000476837" x="895.5">http.Serve(l,nil) 启动服务</text></g></g><g id="minder_node14"><g id="node_expander19" style="cursor: pointer;"><path id="kity_path_180" fill="white" stroke="gray" d="M1409,120.5A6,6,0,1,1,1397,120.5A6,6,0,1,1,1409,120.5"></path><path id="kity_path_181" fill="none" stroke="gray" d="M1398.5,120.5L1407.5,120.5"></path></g><path id="node_outline20" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1363.5,127.5h79a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-79a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text20" fill="black"><text id="kity_text_105" text-rendering="inherit" font-size="14" dy=".8em" y="131.40000009536743" x="1380.5">客户端</text></g></g><g id="minder_node15"><g id="node_expander13" display="none" style="cursor: pointer;"><path id="kity_path_162" fill="white" stroke="gray" d="M1400.5,199.5A6,6,0,1,1,1388.5,199.5A6,6,0,1,1,1400.5,199.5"></path><path id="kity_path_163" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M1405.5,188.5h621a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-621a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_93" text-rendering="inherit" font-size="12" dy=".8em" y="191.70000004768372" x="1410.5">客户端一定要做好出入参结构 需要关注的是结构内部的参数 是否与rpc提供的对应 入参需要对应 出参要啥就生命啥</text></g></g><g id="minder_node16"><g id="node_expander14" display="none" style="cursor: pointer;"><path id="kity_path_165" fill="white" stroke="gray" d="M1400.5,251.5A6,6,0,1,1,1388.5,251.5A6,6,0,1,1,1400.5,251.5"></path><path id="kity_path_166" fill="none" stroke="gray"></path></g><path id="node_outline15" fill="none" stroke="none" d="M1405.5,240.5h400a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-400a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text15" fill="black"><text id="kity_text_95" text-rendering="inherit" font-size="12" dy=".8em" y="243.70000004768372" x="1410.5">先创建client&#xa0; 使用方法 rpc.DialHttp("协议&#xa0; 服务器是啥这就是啥"，地址)</text></g></g><g id="minder_node17"><g id="node_expander16" style="cursor: pointer;"><path id="kity_path_171" fill="white" stroke="gray" d="M1400.5,303.5A6,6,0,1,1,1388.5,303.5A6,6,0,1,1,1400.5,303.5"></path><path id="kity_path_172" fill="none" stroke="gray" d="M1390,303.5L1399,303.5"></path></g><path id="node_outline17" fill="none" stroke="none" d="M1405.5,292.5h399a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-399a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text17" fill="black"><text id="kity_text_99" text-rendering="inherit" font-size="12" dy=".8em" y="295.7000000476837" x="1410.5">clinet.Go(结构体名.方法名，入参，回参指针，chan&#xa0; 可以走nil 默认即可)</text></g></g><g id="minder_node18"><g id="node_expander15" display="none" style="cursor: pointer;"><path id="kity_path_168" fill="white" stroke="gray" d="M1440.5,355.5A6,6,0,1,1,1428.5,355.5A6,6,0,1,1,1440.5,355.5"></path><path id="kity_path_169" fill="none" stroke="gray"></path></g><path id="node_outline16" fill="none" stroke="none" d="M1445.5,344.5h186a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-186a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_97" text-rendering="inherit" font-size="12" dy=".8em" y="347.7000000476837" x="1450.5">返回一个chan 自行创建阻塞时间</text></g></g><g id="minder_node19"><g id="node_expander18" style="cursor: pointer;"><path id="kity_path_177" fill="white" stroke="gray" d="M1400.5,407.5A6,6,0,1,1,1388.5,407.5A6,6,0,1,1,1400.5,407.5"></path><path id="kity_path_178" fill="none" stroke="gray" d="M1390,407.5L1399,407.5"></path></g><path id="node_outline19" fill="none" stroke="none" d="M1405.5,396.5h260a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-260a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text19" fill="black"><text id="kity_text_103" text-rendering="inherit" font-size="12" dy=".8em" y="399.7000000476837" x="1410.5">client.Call((结构体名.方法名，入参，回参指针)</text></g></g><g id="minder_node20"><g id="node_expander17" display="none" style="cursor: pointer;"><path id="kity_path_174" fill="white" stroke="gray" d="M1440.5,459.5A6,6,0,1,1,1428.5,459.5A6,6,0,1,1,1440.5,459.5"></path><path id="kity_path_175" fill="none" stroke="gray"></path></g><path id="node_outline18" fill="none" stroke="none" d="M1445.5,448.5h85a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-85a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text18" fill="black"><text id="kity_text_101" text-rendering="inherit" font-size="12" dy=".8em" y="451.7000000476837" x="1450.5">直接进行阻塞</text></g></g></g></g></svg>