<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="2393" height="669" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 2393 669"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1226.5,60.5v30h-982.5V122.5"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M244.5,148.5v20h-133V183.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M244.5,148.5v20h111V183.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1226.5,60.5v30h-585.5V110.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M641.5,136.5v20h-23.5V228.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1226.5,60.5v30h-394.5V110.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M832.5,136.5v20h-2V185.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1226.5,60.5v30h-161V110.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1065.5,136.5v20h0.5V171.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1226.5,60.5v30h55.5V110.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1282.5,136.5v20h0V171.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1226.5,60.5v30h505.5V118.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1732.5,144.5v20h-216V179.5"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1732.5,144.5v20h13V179.5"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1745.5,201.5v15h2.5V249.5"></path><path id="kity_path_61" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1732.5,144.5v20h229.5V179.5"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1226.5,60.5v30h1025.5V110.5"></path><path id="kity_path_65" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2252.5,136.5v20h8V264.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(57, 80, 96)" d="M1111.5,20.5h230a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-230a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="30.09999990463257" x="1130.5">golang 尝鲜之体验go泛型</text></g></g><g id="kity_g_12"><path id="kity_path_13" fill="none" stroke="none" d="M1130.5,40.5h0v0h0z"></path></g><g id="kity_g_14"><path id="kity_path_15" fill="none" stroke="none" d="M1130.5,40.5h0v0h0z"></path><path id="kity_path_16" fill="none" stroke="none"></path></g><g id="minder_node2"><g id="node_expander3" style="cursor: pointer;"><path id="kity_path_160" fill="white" stroke="gray" d="M250,115.5A6,6,0,1,1,238,115.5A6,6,0,1,1,250,115.5"></path><path id="kity_path_161" fill="none" stroke="gray" d="M239.5,115.5L248.5,115.5"></path></g><path id="node_outline4" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M183.5,122.5h121a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-121a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text4" fill="black"><text id="kity_text_71" text-rendering="inherit" font-size="14" dy=".8em" y="126.40000009536743" x="200.5">泛型基本含义</text></g></g><g id="minder_node3"><g id="node_expander1" display="none" style="cursor: pointer;"><path id="kity_path_154" fill="white" stroke="gray" d="M117,177.5A6,6,0,1,1,105,177.5A6,6,0,1,1,117,177.5"></path><path id="kity_path_155" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M25.5,183.5h171a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-171a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_67" text-rendering="inherit" font-size="12" dy=".8em" y="186.70000004768372" x="30.5">[泛型标识 泛型约束]&#xa0; &#xa0; [T any]</text></g></g><g id="minder_node4"><g id="node_expander2" display="none" style="cursor: pointer;"><path id="kity_path_157" fill="white" stroke="gray" d="M361,177.5A6,6,0,1,1,349,177.5A6,6,0,1,1,361,177.5"></path><path id="kity_path_158" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="none" stroke="none" d="M246.5,183.5h217a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-217a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text3" fill="black"><text id="kity_text_69" text-rendering="inherit" font-size="12" dy=".8em" y="186.70000004768372" x="251.5">注意：1.17版本的泛型方法不允许暴露</text></g></g><g id="minder_node5"><g id="node_expander5" style="cursor: pointer;"><path id="kity_path_166" fill="white" stroke="gray" d="M647,103.5A6,6,0,1,1,635,103.5A6,6,0,1,1,647,103.5"></path><path id="kity_path_167" fill="none" stroke="gray" d="M636.5,103.5L645.5,103.5"></path></g><path id="node_outline6" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M594.5,110.5h93a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-93a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text6" fill="black"><text id="kity_text_77" text-rendering="inherit" font-size="14" dy=".8em" y="114.40000009536743" x="611.5">泛型方法</text></g></g><g id="minder_node6"><g id="node_expander4" display="none" style="cursor: pointer;"><path id="kity_path_163" fill="white" stroke="gray" d="M623.5,222.5A6,6,0,1,1,611.5,222.5A6,6,0,1,1,623.5,222.5"></path><path id="kity_path_164" fill="none" stroke="gray"></path></g><path id="node_outline5" fill="none" stroke="none" d="M549.5,228.5h136a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-136a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text5" fill="black"><text id="kity_text_73" text-rendering="inherit" font-size="12" dy=".8em" y="231.70000004768372" x="554.5">func F[T any](t T)(z T){</text><text id="kity_text_74" text-rendering="inherit" font-size="12" dy=".8em" y="249.70000004768372" x="554.5"></text><text id="kity_text_75" text-rendering="inherit" font-size="12" dy=".8em" y="267.7000000476837" x="554.5">}</text></g></g><g id="minder_node7"><g id="node_expander7" style="cursor: pointer;"><path id="kity_path_172" fill="white" stroke="gray" d="M838,103.5A6,6,0,1,1,826,103.5A6,6,0,1,1,838,103.5"></path><path id="kity_path_173" fill="none" stroke="gray" d="M827.5,103.5L836.5,103.5"></path></g><path id="node_outline8" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M778.5,110.5h107a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-107a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text8" fill="black"><text id="kity_text_83" text-rendering="inherit" font-size="14" dy=".8em" y="114.40000009536743" x="795.5">泛型结构体</text></g></g><g id="minder_node8"><g id="node_expander6" display="none" style="cursor: pointer;"><path id="kity_path_169" fill="white" stroke="gray" d="M836,179.5A6,6,0,1,1,824,179.5A6,6,0,1,1,836,179.5"></path><path id="kity_path_170" fill="none" stroke="gray"></path></g><path id="node_outline7" fill="none" stroke="none" d="M757.5,185.5h145a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-145a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text7" fill="black"><text id="kity_text_79" text-rendering="inherit" font-size="12" dy=".8em" y="188.70000004768372" x="762.5">type User[T any] struct{</text><text id="kity_text_80" text-rendering="inherit" font-size="12" dy=".8em" y="206.70000004768372" x="762.5">Name T</text><text id="kity_text_81" text-rendering="inherit" font-size="12" dy=".8em" y="224.70000004768372" x="762.5">}</text></g></g><g id="minder_node9"><g id="node_expander9" style="cursor: pointer;"><path id="kity_path_178" fill="white" stroke="gray" d="M1071.5,103.5A6,6,0,1,1,1059.5,103.5A6,6,0,1,1,1071.5,103.5"></path><path id="kity_path_179" fill="none" stroke="gray" d="M1061,103.5L1070,103.5"></path></g><path id="node_outline10" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1018.5,110.5h94a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-94a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text10" fill="black"><text id="kity_text_87" text-rendering="inherit" font-size="14" dy=".8em" y="114.40000009536743" x="1035.5">泛型map</text></g></g><g id="minder_node10"><g id="node_expander8" display="none" style="cursor: pointer;"><path id="kity_path_175" fill="white" stroke="gray" d="M1072,165.5A6,6,0,1,1,1060,165.5A6,6,0,1,1,1072,165.5"></path><path id="kity_path_176" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M954.5,171.5h223a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-223a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_85" text-rendering="inherit" font-size="12" dy=".8em" y="174.70000004768372" x="959.5">需要注意key必须要先定义约束才可使用</text></g></g><g id="minder_node11"><g id="node_expander11" style="cursor: pointer;"><path id="kity_path_184" fill="white" stroke="gray" d="M1288,103.5A6,6,0,1,1,1276,103.5A6,6,0,1,1,1288,103.5"></path><path id="kity_path_185" fill="none" stroke="gray" d="M1277.5,103.5L1286.5,103.5"></path></g><path id="node_outline12" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1235.5,110.5h93a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-93a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text12" fill="black"><text id="kity_text_91" text-rendering="inherit" font-size="14" dy=".8em" y="114.40000009536743" x="1252.5">泛型切片</text></g></g><g id="minder_node12"><g id="node_expander10" display="none" style="cursor: pointer;"><path id="kity_path_181" fill="white" stroke="gray" d="M1288,165.5A6,6,0,1,1,1276,165.5A6,6,0,1,1,1288,165.5"></path><path id="kity_path_182" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M1227.5,171.5h109a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-109a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_89" text-rendering="inherit" font-size="12" dy=".8em" y="174.70000004768372" x="1232.5">类似于泛型结构体</text></g></g><g id="minder_node13"><g id="node_expander16" style="cursor: pointer;"><path id="kity_path_199" fill="white" stroke="gray" d="M1738,111.5A6,6,0,1,1,1726,111.5A6,6,0,1,1,1738,111.5"></path><path id="kity_path_200" fill="none" stroke="gray" d="M1727.5,111.5L1736.5,111.5"></path></g><path id="node_outline17" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1671.5,118.5h121a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-121a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text17" fill="black"><text id="kity_text_124" text-rendering="inherit" font-size="14" dy=".8em" y="122.40000009536743" x="1688.5">创建泛型约束</text></g></g><g id="minder_node14"><g id="node_expander12" display="none" style="cursor: pointer;"><path id="kity_path_187" fill="white" stroke="gray" d="M1522,173.5A6,6,0,1,1,1510,173.5A6,6,0,1,1,1522,173.5"></path><path id="kity_path_188" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M1444.5,179.5h143a5,5,0,0,1,5,5v48a5,5,0,0,1,-5,5h-143a5,5,0,0,1,-5,-5v-48a5,5,0,0,1,5,-5z"></path><g id="node_text13" fill="black"><text id="kity_text_93" text-rendering="inherit" font-size="12" dy=".8em" y="182.70000004768372" x="1449.5">type MyType interface{</text><text id="kity_text_94" text-rendering="inherit" font-size="12" dy=".8em" y="200.70000004768372" x="1449.5">type int,int8</text><text id="kity_text_95" text-rendering="inherit" font-size="12" dy=".8em" y="218.70000004768372" x="1449.5">}</text></g></g><g id="minder_node15"><g id="node_expander14" style="cursor: pointer;"><path id="kity_path_193" fill="white" stroke="gray" d="M1751,173.5A6,6,0,1,1,1739,173.5A6,6,0,1,1,1751,173.5"></path><path id="kity_path_194" fill="none" stroke="gray" d="M1740.5,173.5L1749.5,173.5"></path></g><path id="node_outline15" fill="none" stroke="none" d="M1637.5,179.5h215a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-215a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text15" fill="black"><text id="kity_text_120" text-rendering="inherit" font-size="12" dy=".8em" y="182.70000004768372" x="1642.5">同样可以通过自己实现接口来实现约束</text></g></g><g id="minder_node16"><g id="node_expander13" display="none" style="cursor: pointer;"><path id="kity_path_190" fill="white" stroke="gray" d="M1753.5,243.5A6,6,0,1,1,1741.5,243.5A6,6,0,1,1,1753.5,243.5"></path><path id="kity_path_191" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M1651.5,249.5h192a5,5,0,0,1,5,5v390a5,5,0,0,1,-5,5h-192a5,5,0,0,1,-5,-5v-390a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_97" text-rendering="inherit" font-size="12" dy=".8em" y="252.70000004768372" x="1656.5">type z interface {</text><text id="kity_text_98" text-rendering="inherit" font-size="12" dy=".8em" y="270.7000000476837" x="1656.5">   GetValue() string</text><text id="kity_text_99" text-rendering="inherit" font-size="12" dy=".8em" y="288.7000000476837" x="1656.5">}</text><text id="kity_text_100" text-rendering="inherit" font-size="12" dy=".8em" y="306.7000000476837" x="1656.5"></text><text id="kity_text_101" text-rendering="inherit" font-size="12" dy=".8em" y="324.7000000476837" x="1656.5">type User struct {</text><text id="kity_text_102" text-rendering="inherit" font-size="12" dy=".8em" y="342.7000000476837" x="1656.5">   Name string</text><text id="kity_text_103" text-rendering="inherit" font-size="12" dy=".8em" y="360.7000000476837" x="1656.5">}</text><text id="kity_text_104" text-rendering="inherit" font-size="12" dy=".8em" y="378.7000000476837" x="1656.5"></text><text id="kity_text_105" text-rendering="inherit" font-size="12" dy=".8em" y="396.7000000476837" x="1656.5">func (u User) GetValue() string {</text><text id="kity_text_106" text-rendering="inherit" font-size="12" dy=".8em" y="414.7000000476837" x="1656.5">   return u.Name</text><text id="kity_text_107" text-rendering="inherit" font-size="12" dy=".8em" y="432.7000000476837" x="1656.5">}</text><text id="kity_text_108" text-rendering="inherit" font-size="12" dy=".8em" y="450.7000000476837" x="1656.5"></text><text id="kity_text_109" text-rendering="inherit" font-size="12" dy=".8em" y="468.7000000476837" x="1656.5">func test[T z](t T)T{</text><text id="kity_text_110" text-rendering="inherit" font-size="12" dy=".8em" y="486.7000000476837" x="1656.5">   fmt.Println(t.GetValue())</text><text id="kity_text_111" text-rendering="inherit" font-size="12" dy=".8em" y="504.7000000476837" x="1656.5">   return t</text><text id="kity_text_112" text-rendering="inherit" font-size="12" dy=".8em" y="522.7000000476837" x="1656.5">}</text><text id="kity_text_113" text-rendering="inherit" font-size="12" dy=".8em" y="540.7000000476837" x="1656.5"></text><text id="kity_text_114" text-rendering="inherit" font-size="12" dy=".8em" y="558.7000000476837" x="1656.5">func main(){</text><text id="kity_text_115" text-rendering="inherit" font-size="12" dy=".8em" y="576.7000000476837" x="1656.5">   u :=User{Name: "sss"}</text><text id="kity_text_116" text-rendering="inherit" font-size="12" dy=".8em" y="594.7000000476837" x="1656.5">   z := test[User](u)</text><text id="kity_text_117" text-rendering="inherit" font-size="12" dy=".8em" y="612.7000000476837" x="1656.5">   fmt.Println(z.Name)</text><text id="kity_text_118" text-rendering="inherit" font-size="12" dy=".8em" y="630.7000000476837" x="1656.5">}</text></g></g><g id="minder_node17"><g id="node_expander15" display="none" style="cursor: pointer;"><path id="kity_path_196" fill="white" stroke="gray" d="M1967.5,173.5A6,6,0,1,1,1955.5,173.5A6,6,0,1,1,1967.5,173.5"></path><path id="kity_path_197" fill="none" stroke="gray"></path></g><path id="node_outline16" fill="none" stroke="none" d="M1902.5,179.5h118a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-118a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_122" text-rendering="inherit" font-size="12" dy=".8em" y="182.70000004768372" x="1907.5">type+接口混合使用</text></g></g><g id="minder_node18"><g id="node_expander18" style="cursor: pointer;"><path id="kity_path_205" fill="white" stroke="gray" d="M2258,103.5A6,6,0,1,1,2246,103.5A6,6,0,1,1,2258,103.5"></path><path id="kity_path_206" fill="none" stroke="gray" d="M2247.5,103.5L2256.5,103.5"></path></g><path id="node_outline19" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M2163.5,110.5h177a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-177a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text19" fill="black"><text id="kity_text_134" text-rendering="inherit" font-size="14" dy=".8em" y="114.40000009536743" x="2180.5">泛型结构体的泛型方法</text></g></g><g id="minder_node19"><g id="node_expander17" display="none" style="cursor: pointer;"><path id="kity_path_202" fill="white" stroke="gray" d="M2266,258.5A6,6,0,1,1,2254,258.5A6,6,0,1,1,2266,258.5"></path><path id="kity_path_203" fill="none" stroke="gray"></path></g><path id="node_outline18" fill="none" stroke="none" d="M2151.5,264.5h217a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-217a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z"></path><g id="node_text18" fill="black"><text id="kity_text_126" text-rendering="inherit" font-size="12" dy=".8em" y="267.7000000476837" x="2156.5">type MyType[T any] struct {</text><text id="kity_text_127" text-rendering="inherit" font-size="12" dy=".8em" y="285.7000000476837" x="2156.5">   </text><text id="kity_text_128" text-rendering="inherit" font-size="12" dy=".8em" y="303.7000000476837" x="2156.5">}</text><text id="kity_text_129" text-rendering="inherit" font-size="12" dy=".8em" y="321.7000000476837" x="2156.5"></text><text id="kity_text_130" text-rendering="inherit" font-size="12" dy=".8em" y="339.7000000476837" x="2156.5">func (m MyType[T]) name(t T) (z T) {</text><text id="kity_text_131" text-rendering="inherit" font-size="12" dy=".8em" y="357.7000000476837" x="2156.5"></text><text id="kity_text_132" text-rendering="inherit" font-size="12" dy=".8em" y="375.7000000476837" x="2156.5">}</text></g></g></g></g></svg>