<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="4299" height="584" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 4299 584"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2391.5,60.5v30h-1588.5V110.5"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M803.5,136.5v20h0.5V203.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2391.5,60.5v30h-965V111.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1426.5,137.5v20h3.5V196.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2391.5,60.5v30h441.5V111.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2833.5,137.5v20h0V172.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2833.5,194.5v15h-1050.5V227.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1782.5,249.5v15h0.5V279.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2833.5,194.5v15h-789.5V228.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2043.5,250.5v15h-0.5V290.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2833.5,194.5v15h820V263.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3653.5,285.5v15h-477V530.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3653.5,285.5v15h-343V528.5"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3653.5,285.5v15h-169V529.5"></path><path id="kity_path_59" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3653.5,285.5v15h78V534.5"></path><path id="kity_path_61" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3653.5,285.5v15h341V538.5"></path><path id="kity_path_63" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3653.5,285.5v15h567V542.5"></path><path id="kity_path_65" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2833.5,194.5v15h-500V238.5"></path><path id="kity_path_67" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2333.5,260.5v15h0V290.5"></path><path id="kity_path_69" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2833.5,194.5v15h-224V238.5"></path><path id="kity_path_71" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2609.5,260.5v15h0V290.5"></path><path id="kity_path_73" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2833.5,194.5v15h41V249.5"></path><path id="kity_path_75" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2874.5,271.5v15h0V301.5"></path><path id="kity_path_77" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2833.5,194.5v15h271V247.5"></path><path id="kity_path_79" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M3104.5,269.5v15h0V299.5"></path><path id="kity_path_81" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M2391.5,60.5v30h-2263.5V110.5"></path><path id="kity_path_83" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M128.5,136.5v20h0V171.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(57, 80, 96)" d="M2260.5,20.5h262a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-262a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="30.09999990463257" x="2279.5">断言&#xa0;Assertion 和 反射&#xa0;&#xa0;reflect</text></g></g><g id="kity_g_12"><path id="kity_path_13" fill="none" stroke="none" d="M2279.5,40.5h0v0h0z"></path></g><g id="kity_g_14"><path id="kity_path_15" fill="none" stroke="none" d="M2279.5,40.5h0v0h0z"></path><path id="kity_path_16" fill="none" stroke="none"></path></g><g id="minder_node2"><g id="node_expander2" style="cursor: pointer;"><path id="kity_path_174" fill="white" stroke="gray" d="M809,103.5A6,6,0,1,1,797,103.5A6,6,0,1,1,809,103.5"></path><path id="kity_path_175" fill="none" stroke="gray" d="M798.5,103.5L807.5,103.5"></path></g><path id="node_outline3" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M749.5,110.5h107a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-107a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text3" fill="black"><text id="kity_text_88" text-rendering="inherit" font-size="14" dy=".8em" y="114.40000009536743" x="766.5">什么是反射</text></g></g><g id="minder_node3"><g id="node_expander1" display="none" style="cursor: pointer;"><path id="kity_path_171" fill="white" stroke="gray" d="M809.5,197.5A6,6,0,1,1,797.5,197.5A6,6,0,1,1,809.5,197.5"></path><path id="kity_path_172" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M444.5,203.5h718a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-718a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_85" text-rendering="inherit" font-size="12" dy=".8em" y="206.70000004768372" x="449.5">官方说法：在编译时不知道类型的情况下，可更新变量、运行时查看值、调用方法以及直接对他们的布局进行操作的机制，称为反射。</text><text id="kity_text_86" text-rendering="inherit" font-size="12" dy=".8em" y="224.70000004768372" x="449.5">通俗一点就是：可以知道本数据的原始数据类型和数据内容，方法等、并且可以进行一定操作</text></g></g><g id="minder_node4"><g id="node_expander4" style="cursor: pointer;"><path id="kity_path_180" fill="white" stroke="gray" d="M1432.5,104.5A6,6,0,1,1,1420.5,104.5A6,6,0,1,1,1432.5,104.5"></path><path id="kity_path_181" fill="none" stroke="gray" d="M1422,104.5L1431,104.5"></path></g><path id="node_outline5" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1359.5,111.5h134a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-134a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text5" fill="black"><text id="kity_text_96" text-rendering="inherit" font-size="14" dy=".8em" y="115.40000009536743" x="1376.5">为什么要用反射</text></g></g><g id="minder_node5"><g id="node_expander3" display="none" style="cursor: pointer;"><path id="kity_path_177" fill="white" stroke="gray" d="M1436,190.5A6,6,0,1,1,1424,190.5A6,6,0,1,1,1436,190.5"></path><path id="kity_path_178" fill="none" stroke="gray"></path></g><path id="node_outline4" fill="none" stroke="none" d="M1255.5,196.5h349a5,5,0,0,1,5,5v84a5,5,0,0,1,-5,5h-349a5,5,0,0,1,-5,-5v-84a5,5,0,0,1,5,-5z"></path><g id="node_text4" fill="black"><text id="kity_text_90" text-rendering="inherit" font-size="12" dy=".8em" y="199.70000004768372" x="1260.5">我们通过接口或者其他的方式接收到了类型不固定的数据的时候</text><text id="kity_text_91" text-rendering="inherit" font-size="12" dy=".8em" y="217.70000004768372" x="1260.5">需要写太多的swatch case 断言代码 </text><text id="kity_text_92" text-rendering="inherit" font-size="12" dy=".8em" y="235.70000004768372" x="1260.5">此时代码不灵活且通用性差</text><text id="kity_text_93" text-rendering="inherit" font-size="12" dy=".8em" y="253.70000004768372" x="1260.5">反射这时候就可以无视类型</text><text id="kity_text_94" text-rendering="inherit" font-size="12" dy=".8em" y="271.7000000476837" x="1260.5">改变原数据结构中的数据</text></g></g><g id="minder_node6"><g id="node_expander25" style="cursor: pointer;"><path id="kity_path_243" fill="white" stroke="gray" d="M2839,104.5A6,6,0,1,1,2827,104.5A6,6,0,1,1,2839,104.5"></path><path id="kity_path_244" fill="none" stroke="gray" d="M2828.5,104.5L2837.5,104.5"></path></g><path id="node_outline26" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M2744.5,111.5h177a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-177a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text26" fill="black"><text id="kity_text_138" text-rendering="inherit" font-size="14" dy=".8em" y="115.40000009536743" x="2761.5">反射的用法和主要函数</text></g></g><g id="minder_node7"><g id="node_expander24" style="cursor: pointer;"><path id="kity_path_240" fill="white" stroke="gray" d="M2839,166.5A6,6,0,1,1,2827,166.5A6,6,0,1,1,2839,166.5"></path><path id="kity_path_241" fill="none" stroke="gray" d="M2828.5,166.5L2837.5,166.5"></path></g><path id="node_outline25" fill="none" stroke="none" d="M2803.5,172.5h59a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-59a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text25" fill="black"><text id="kity_text_136" text-rendering="inherit" font-size="12" dy=".8em" y="175.70000004768372" x="2808.5">reflect包</text></g></g><g id="minder_node8"><g id="node_expander6" style="cursor: pointer;"><path id="kity_path_186" fill="white" stroke="gray" d="M1788.5,221.5A6,6,0,1,1,1776.5,221.5A6,6,0,1,1,1788.5,221.5"></path><path id="kity_path_187" fill="none" stroke="gray" d="M1778,221.5L1787,221.5"></path></g><path id="node_outline7" fill="none" stroke="none" d="M1731.5,227.5h102a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-102a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text7" fill="black"><text id="kity_text_100" text-rendering="inherit" font-size="12" dy=".8em" y="230.70000004768372" x="1736.5">reflect.ValueOf()</text></g></g><g id="minder_node9"><g id="node_expander5" display="none" style="cursor: pointer;"><path id="kity_path_183" fill="white" stroke="gray" d="M1789,273.5A6,6,0,1,1,1777,273.5A6,6,0,1,1,1789,273.5"></path><path id="kity_path_184" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="none" stroke="none" d="M1692.5,279.5h181a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-181a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text6" fill="black"><text id="kity_text_98" text-rendering="inherit" font-size="12" dy=".8em" y="282.7000000476837" x="1697.5">获取输入参数接口中的数据的值</text></g></g><g id="minder_node10"><g id="node_expander8" style="cursor: pointer;"><path id="kity_path_192" fill="white" stroke="gray" d="M2049.5,222.5A6,6,0,1,1,2037.5,222.5A6,6,0,1,1,2049.5,222.5"></path><path id="kity_path_193" fill="none" stroke="gray" d="M2039,222.5L2048,222.5"></path></g><path id="node_outline9" fill="none" stroke="none" d="M1994.5,228.5h98a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-98a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_104" text-rendering="inherit" font-size="12" dy=".8em" y="231.70000004768372" x="1999.5">reflect.TypeOf()</text></g></g><g id="minder_node11"><g id="node_expander7" display="none" style="cursor: pointer;"><path id="kity_path_189" fill="white" stroke="gray" d="M2049,284.5A6,6,0,1,1,2037,284.5A6,6,0,1,1,2049,284.5"></path><path id="kity_path_190" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="none" stroke="none" d="M1941.5,290.5h203a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-203a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text8" fill="black"><text id="kity_text_102" text-rendering="inherit" font-size="12" dy=".8em" y="293.7000000476837" x="1946.5">动态获取输入参数接口中的值的类型</text></g></g><g id="minder_node12"><g id="node_expander15" style="cursor: pointer;"><path id="kity_path_213" fill="white" stroke="gray" d="M3659,257.5A6,6,0,1,1,3647,257.5A6,6,0,1,1,3659,257.5"></path><path id="kity_path_214" fill="none" stroke="gray" d="M3648.5,257.5L3657.5,257.5"></path></g><path id="node_outline16" fill="none" stroke="none" d="M3635.5,263.5h35a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-35a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text16" fill="black"><text id="kity_text_118" text-rendering="inherit" font-size="12" dy=".8em" y="266.7000000476837" x="3640.5">举例</text></g></g><g id="minder_node13"><g id="node_expander9" display="none" style="cursor: pointer;"><path id="kity_path_195" fill="white" stroke="gray" d="M3182,524.5A6,6,0,1,1,3170,524.5A6,6,0,1,1,3182,524.5"></path><path id="kity_path_196" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="none" stroke="none" d="M3145.5,530.5h61a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-61a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text10" fill="black"><text id="kity_text_106" text-rendering="inherit" font-size="12" dy=".8em" y="533.7000000476837" x="3150.5">普通反射</text></g></g><g id="minder_node14"><g id="node_expander10" display="none" style="cursor: pointer;"><path id="kity_path_198" fill="white" stroke="gray" d="M3316,522.5A6,6,0,1,1,3304,522.5A6,6,0,1,1,3316,522.5"></path><path id="kity_path_199" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M3274.5,528.5h71a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-71a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_108" text-rendering="inherit" font-size="12" dy=".8em" y="531.7000000476837" x="3279.5">struct 反射</text></g></g><g id="minder_node15"><g id="node_expander11" display="none" style="cursor: pointer;"><path id="kity_path_201" fill="white" stroke="gray" d="M3490,523.5A6,6,0,1,1,3478,523.5A6,6,0,1,1,3490,523.5"></path><path id="kity_path_202" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="none" stroke="none" d="M3418.5,529.5h131a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-131a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text12" fill="black"><text id="kity_text_110" text-rendering="inherit" font-size="12" dy=".8em" y="532.7000000476837" x="3423.5">匿名或嵌入字段的反射</text></g></g><g id="minder_node16"><g id="node_expander12" display="none" style="cursor: pointer;"><path id="kity_path_204" fill="white" stroke="gray" d="M3737,528.5A6,6,0,1,1,3725,528.5A6,6,0,1,1,3737,528.5"></path><path id="kity_path_205" fill="none" stroke="gray"></path></g><path id="node_outline13" fill="none" stroke="none" d="M3623.5,534.5h215a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-215a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text13" fill="black"><text id="kity_text_112" text-rendering="inherit" font-size="12" dy=".8em" y="537.7000000476837" x="3628.5">判断传入的类型是否是我们想要的类型</text></g></g><g id="minder_node17"><g id="node_expander13" display="none" style="cursor: pointer;"><path id="kity_path_207" fill="white" stroke="gray" d="M4000,532.5A6,6,0,1,1,3988,532.5A6,6,0,1,1,4000,532.5"></path><path id="kity_path_208" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M3939.5,538.5h109a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-109a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_114" text-rendering="inherit" font-size="12" dy=".8em" y="541.7000000476837" x="3944.5">通过反射修改内容</text></g></g><g id="minder_node18"><g id="node_expander14" display="none" style="cursor: pointer;"><path id="kity_path_210" fill="white" stroke="gray" d="M4226,536.5A6,6,0,1,1,4214,536.5A6,6,0,1,1,4226,536.5"></path><path id="kity_path_211" fill="none" stroke="gray"></path></g><path id="node_outline15" fill="none" stroke="none" d="M4165.5,542.5h109a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-109a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text15" fill="black"><text id="kity_text_116" text-rendering="inherit" font-size="12" dy=".8em" y="545.7000000476837" x="4170.5">通过反射调用方法</text></g></g><g id="minder_node19"><g id="node_expander17" style="cursor: pointer;"><path id="kity_path_219" fill="white" stroke="gray" d="M2339,232.5A6,6,0,1,1,2327,232.5A6,6,0,1,1,2339,232.5"></path><path id="kity_path_220" fill="none" stroke="gray" d="M2328.5,232.5L2337.5,232.5"></path></g><path id="node_outline18" fill="none" stroke="none" d="M2265.5,238.5h135a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-135a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text18" fill="black"><text id="kity_text_122" text-rendering="inherit" font-size="12" dy=".8em" y="241.70000004768372" x="2270.5">reflect.TypeOf().Kind()</text></g></g><g id="minder_node20"><g id="node_expander16" display="none" style="cursor: pointer;"><path id="kity_path_216" fill="white" stroke="gray" d="M2339,284.5A6,6,0,1,1,2327,284.5A6,6,0,1,1,2339,284.5"></path><path id="kity_path_217" fill="none" stroke="gray"></path></g><path id="node_outline17" fill="none" stroke="none" d="M2290.5,290.5h85a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-85a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text17" fill="black"><text id="kity_text_120" text-rendering="inherit" font-size="12" dy=".8em" y="293.7000000476837" x="2295.5">用来判断类型</text></g></g><g id="minder_node21"><g id="node_expander19" style="cursor: pointer;"><path id="kity_path_225" fill="white" stroke="gray" d="M2615,232.5A6,6,0,1,1,2603,232.5A6,6,0,1,1,2615,232.5"></path><path id="kity_path_226" fill="none" stroke="gray" d="M2604.5,232.5L2613.5,232.5"></path></g><path id="node_outline20" fill="none" stroke="none" d="M2531.5,238.5h155a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-155a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text20" fill="black"><text id="kity_text_126" text-rendering="inherit" font-size="12" dy=".8em" y="241.70000004768372" x="2536.5">reflect.ValueOf().Fidle(int)</text></g></g><g id="minder_node22"><g id="node_expander18" display="none" style="cursor: pointer;"><path id="kity_path_222" fill="white" stroke="gray" d="M2615,284.5A6,6,0,1,1,2603,284.5A6,6,0,1,1,2615,284.5"></path><path id="kity_path_223" fill="none" stroke="gray"></path></g><path id="node_outline19" fill="none" stroke="none" d="M2572.5,290.5h73a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-73a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text19" fill="black"><text id="kity_text_124" text-rendering="inherit" font-size="12" dy=".8em" y="293.7000000476837" x="2577.5">用来获取值</text></g></g><g id="minder_node23"><g id="node_expander21" style="cursor: pointer;"><path id="kity_path_231" fill="white" stroke="gray" d="M2880,243.5A6,6,0,1,1,2868,243.5A6,6,0,1,1,2880,243.5"></path><path id="kity_path_232" fill="none" stroke="gray" d="M2869.5,243.5L2878.5,243.5"></path></g><path id="node_outline22" fill="none" stroke="none" d="M2785.5,249.5h177a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-177a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text22" fill="black"><text id="kity_text_130" text-rendering="inherit" font-size="12" dy=".8em" y="252.70000004768372" x="2790.5">reflect.FieldByIndex([]int{0,1})</text></g></g><g id="minder_node24"><g id="node_expander20" display="none" style="cursor: pointer;"><path id="kity_path_228" fill="white" stroke="gray" d="M2880,295.5A6,6,0,1,1,2868,295.5A6,6,0,1,1,2880,295.5"></path><path id="kity_path_229" fill="none" stroke="gray"></path></g><path id="node_outline21" fill="none" stroke="none" d="M2843.5,301.5h61a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-61a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text21" fill="black"><text id="kity_text_128" text-rendering="inherit" font-size="12" dy=".8em" y="304.7000000476837" x="2848.5">层级取值</text></g></g><g id="minder_node25"><g id="node_expander23" style="cursor: pointer;"><path id="kity_path_237" fill="white" stroke="gray" d="M3110,241.5A6,6,0,1,1,3098,241.5A6,6,0,1,1,3110,241.5"></path><path id="kity_path_238" fill="none" stroke="gray" d="M3099.5,241.5L3108.5,241.5"></path></g><path id="node_outline24" fill="none" stroke="none" d="M3033.5,247.5h141a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-141a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text24" fill="black"><text id="kity_text_134" text-rendering="inherit" font-size="12" dy=".8em" y="250.70000004768372" x="3038.5">reflect.ValueOf().Elem()</text></g></g><g id="minder_node26"><g id="node_expander22" display="none" style="cursor: pointer;"><path id="kity_path_234" fill="white" stroke="gray" d="M3110,293.5A6,6,0,1,1,3098,293.5A6,6,0,1,1,3110,293.5"></path><path id="kity_path_235" fill="none" stroke="gray"></path></g><path id="node_outline23" fill="none" stroke="none" d="M3043.5,299.5h121a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-121a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text23" fill="black"><text id="kity_text_132" text-rendering="inherit" font-size="12" dy=".8em" y="302.7000000476837" x="3048.5">获取原始数据并操作</text></g></g><g id="minder_node27"><g id="node_expander27" style="cursor: pointer;"><path id="kity_path_249" fill="white" stroke="gray" d="M134,103.5A6,6,0,1,1,122,103.5A6,6,0,1,1,134,103.5"></path><path id="kity_path_250" fill="none" stroke="gray" d="M123.5,103.5L132.5,103.5"></path></g><path id="node_outline28" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M96.5,110.5h63a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-63a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text28" fill="black"><text id="kity_text_142" text-rendering="inherit" font-size="14" dy=".8em" y="114.40000009536743" x="113.5">断言</text></g></g><g id="minder_node28"><g id="node_expander26" display="none" style="cursor: pointer;"><path id="kity_path_246" fill="white" stroke="gray" d="M134,165.5A6,6,0,1,1,122,165.5A6,6,0,1,1,134,165.5"></path><path id="kity_path_247" fill="none" stroke="gray"></path></g><path id="node_outline27" fill="none" stroke="none" d="M25.5,171.5h205a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-205a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text27" fill="black"><text id="kity_text_140" text-rendering="inherit" font-size="12" dy=".8em" y="174.70000004768372" x="30.5">把一个接口类型指定为它原始的类型</text></g></g></g></g></svg>