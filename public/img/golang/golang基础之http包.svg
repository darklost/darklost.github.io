<svg id="kity_svg_6" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" width="1719" height="612" style="background: rgb(251, 251, 251); visibility: visible;" viewBox="0 0 1719 612"><defs id="kity_defs_7"><linearGradient id="kity_linearGradient_17" x1="0" y1="0" x2="0" y2="1"><stop id="kity_stop_18" offset="0" stop-color="rgb(255, 255, 255)"></stop><stop id="kity_stop_19" offset="1" stop-color="rgb(204, 204, 204)"></stop></linearGradient><marker id="kity_marker_2" orient="auto" refX="6" refY="0" viewBox="-7 -7 14 14" markerWidth="7" markerHeight="7" markerUnits="userSpaceOnUse"><path id="kity_path_3" fill="rgb(115, 161, 191)" stroke="none" d="M6,0A6,6,0,1,1,-6,0A6,6,0,1,1,6,0"></path></marker></defs><g id="kity_g_8"><g id="minder1" text-rendering="optimize-speed"><g id="minder_connect_group1"><path id="kity_path_31" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M549.5,60.5v30h-452V110.5"></path><path id="kity_path_33" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M40.5,136.5V182.5L60.5,182.5"></path><path id="kity_path_35" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M40.5,136.5V234.5L60.5,234.5"></path><path id="kity_path_37" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M40.5,136.5V286.5L60.5,286.5"></path><path id="kity_path_39" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M40.5,136.5V338.5L60.5,338.5"></path><path id="kity_path_41" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M40.5,136.5V390.5L60.5,390.5"></path><path id="kity_path_43" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M549.5,60.5v30h76V120.5"></path><path id="kity_path_45" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M602.5,146.5V192.5L622.5,192.5"></path><path id="kity_path_47" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M602.5,146.5V271.5L622.5,271.5"></path><path id="kity_path_49" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M602.5,146.5V359.5L622.5,359.5"></path><path id="kity_path_51" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M602.5,146.5V420.5L622.5,420.5"></path><path id="kity_path_53" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M602.5,146.5V527.5L626.5,527.5"></path><path id="kity_path_55" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M549.5,60.5v30h752V132.5"></path><path id="kity_path_57" fill="none" stroke="rgb(115, 161, 191)" stroke-width="1" d="M1278.5,158.5V269.5L1336.5,269.5"></path></g><g id="minder_node1"><path id="node_outline1" fill="rgb(115, 161, 191)" stroke="rgb(57, 80, 96)" d="M454.5,20.5h189a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-189a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z" stroke-width="3"></path><g id="node_text1" fill="white"><text id="kity_text_22" text-rendering="inherit" font-size="16" dy=".8em" y="30.09999990463257" x="473.5">golang基础之http包</text></g></g><g id="kity_g_12"><path id="kity_path_13" fill="none" stroke="none" d="M473.5,40.5h0v0h0z"></path></g><g id="kity_g_14"><path id="kity_path_15" fill="none" stroke="none" d="M473.5,40.5h0v0h0z"></path><path id="kity_path_16" fill="none" stroke="none"></path></g><g id="minder_node2"><g id="node_expander6" style="cursor: pointer;"><path id="kity_path_132" fill="white" stroke="gray" d="M103,103.5A6,6,0,1,1,91,103.5A6,6,0,1,1,103,103.5"></path><path id="kity_path_133" fill="none" stroke="gray" d="M92.5,103.5L101.5,103.5"></path></g><path id="node_outline7" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M23.5,110.5h147a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-147a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text7" fill="black"><text id="kity_text_69" text-rendering="inherit" font-size="14" dy=".8em" y="114.40000009536743" x="40.5">重要的类型和接口</text></g></g><g id="minder_node3"><g id="node_expander1" display="none" style="cursor: pointer;"><path id="kity_path_117" fill="white" stroke="gray" d="M60.5,182.5A6,6,0,1,1,48.5,182.5A6,6,0,1,1,60.5,182.5"></path><path id="kity_path_118" fill="none" stroke="gray"></path></g><path id="node_outline2" fill="none" stroke="none" d="M65.5,171.5h239a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-239a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text2" fill="black"><text id="kity_text_59" text-rendering="inherit" font-size="12" dy=".8em" y="174.70000004768372" x="70.5">server&#xa0; 服务&#xa0; 包含地址 端口 处理器 等等等</text></g></g><g id="minder_node4"><g id="node_expander2" display="none" style="cursor: pointer;"><path id="kity_path_120" fill="white" stroke="gray" d="M60.5,234.5A6,6,0,1,1,48.5,234.5A6,6,0,1,1,60.5,234.5"></path><path id="kity_path_121" fill="none" stroke="gray"></path></g><path id="node_outline3" fill="none" stroke="none" d="M65.5,223.5h145a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-145a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text3" fill="black"><text id="kity_text_61" text-rendering="inherit" font-size="12" dy=".8em" y="226.70000004768372" x="70.5">conn&#xa0; 链接 用户请求来的</text></g></g><g id="minder_node5"><g id="node_expander3" display="none" style="cursor: pointer;"><path id="kity_path_123" fill="white" stroke="gray" d="M60.5,286.5A6,6,0,1,1,48.5,286.5A6,6,0,1,1,60.5,286.5"></path><path id="kity_path_124" fill="none" stroke="gray"></path></g><path id="node_outline4" fill="none" stroke="none" d="M65.5,275.5h115a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-115a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text4" fill="black"><text id="kity_text_63" text-rendering="inherit" font-size="12" dy=".8em" y="278.7000000476837" x="70.5">response 返回信息</text></g></g><g id="minder_node6"><g id="node_expander4" display="none" style="cursor: pointer;"><path id="kity_path_126" fill="white" stroke="gray" d="M60.5,338.5A6,6,0,1,1,48.5,338.5A6,6,0,1,1,60.5,338.5"></path><path id="kity_path_127" fill="none" stroke="gray"></path></g><path id="node_outline5" fill="none" stroke="none" d="M65.5,327.5h146a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-146a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text5" fill="black"><text id="kity_text_65" text-rendering="inherit" font-size="12" dy=".8em" y="330.7000000476837" x="70.5">request&#xa0; 用户的请求信息</text></g></g><g id="minder_node7"><g id="node_expander5" display="none" style="cursor: pointer;"><path id="kity_path_129" fill="white" stroke="gray" d="M60.5,390.5A6,6,0,1,1,48.5,390.5A6,6,0,1,1,60.5,390.5"></path><path id="kity_path_130" fill="none" stroke="gray"></path></g><path id="node_outline6" fill="none" stroke="none" d="M65.5,379.5h308a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-308a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text6" fill="black"><text id="kity_text_67" text-rendering="inherit" font-size="12" dy=".8em" y="382.7000000476837" x="70.5">Handle 对于接收的信息进行处理并且返回的一个处理器</text></g></g><g id="minder_node8"><g id="node_expander12" style="cursor: pointer;"><path id="kity_path_150" fill="white" stroke="gray" d="M631,113.5A6,6,0,1,1,619,113.5A6,6,0,1,1,631,113.5"></path><path id="kity_path_151" fill="none" stroke="gray" d="M620.5,113.5L629.5,113.5"></path></g><path id="node_outline13" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M585.5,120.5h79a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-79a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text13" fill="black"><text id="kity_text_91" text-rendering="inherit" font-size="14" dy=".8em" y="124.40000009536743" x="602.5">服务端</text></g></g><g id="minder_node9"><g id="node_expander7" display="none" style="cursor: pointer;"><path id="kity_path_135" fill="white" stroke="gray" d="M622.5,192.5A6,6,0,1,1,610.5,192.5A6,6,0,1,1,622.5,192.5"></path><path id="kity_path_136" fill="none" stroke="gray"></path></g><path id="node_outline8" fill="none" stroke="none" d="M627.5,181.5h139a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-139a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text8" fill="black"><text id="kity_text_71" text-rendering="inherit" font-size="12" dy=".8em" y="184.70000004768372" x="632.5">Handle 和 HandleFunc</text></g></g><g id="minder_node10"><g id="node_expander8" display="none" style="cursor: pointer;"><path id="kity_path_138" fill="white" stroke="gray" d="M622.5,271.5A6,6,0,1,1,610.5,271.5A6,6,0,1,1,622.5,271.5"></path><path id="kity_path_139" fill="none" stroke="gray"></path></g><path id="node_outline9" fill="none" stroke="none" d="M627.5,233.5h339a5,5,0,0,1,5,5v66a5,5,0,0,1,-5,5h-339a5,5,0,0,1,-5,-5v-66a5,5,0,0,1,5,-5z"></path><g id="node_text9" fill="black"><text id="kity_text_73" text-rendering="inherit" font-size="12" dy=".8em" y="236.70000004768372" x="632.5">// 创造一个handle</text><text id="kity_text_74" text-rendering="inherit" font-size="12" dy=".8em" y="254.70000004768372" x="632.5">func handle (res http.ResponseWriter, req *http.Request){</text><text id="kity_text_75" text-rendering="inherit" font-size="12" dy=".8em" y="272.7000000476837" x="632.5">   fmt.Fprintln(res, "hello world")</text><text id="kity_text_76" text-rendering="inherit" font-size="12" dy=".8em" y="290.7000000476837" x="632.5">}</text></g></g><g id="minder_node11"><g id="node_expander9" display="none" style="cursor: pointer;"><path id="kity_path_141" fill="white" stroke="gray" d="M622.5,359.5A6,6,0,1,1,610.5,359.5A6,6,0,1,1,622.5,359.5"></path><path id="kity_path_142" fill="none" stroke="gray"></path></g><path id="node_outline10" fill="none" stroke="none" d="M627.5,339.5h196a5,5,0,0,1,5,5v30a5,5,0,0,1,-5,5h-196a5,5,0,0,1,-5,-5v-30a5,5,0,0,1,5,-5z"></path><g id="node_text10" fill="black"><text id="kity_text_78" text-rendering="inherit" font-size="12" dy=".8em" y="342.7000000476837" x="632.5">http.HandleFunc("/",handle)</text><text id="kity_text_79" text-rendering="inherit" font-size="12" dy=".8em" y="360.7000000476837" x="632.5">// 把handle创建进入默认路由器中</text></g></g><g id="minder_node12"><g id="node_expander10" display="none" style="cursor: pointer;"><path id="kity_path_144" fill="white" stroke="gray" d="M622.5,420.5A6,6,0,1,1,610.5,420.5A6,6,0,1,1,622.5,420.5"></path><path id="kity_path_145" fill="none" stroke="gray"></path></g><path id="node_outline11" fill="none" stroke="none" d="M627.5,409.5h250a5,5,0,0,1,5,5v12a5,5,0,0,1,-5,5h-250a5,5,0,0,1,-5,-5v-12a5,5,0,0,1,5,-5z"></path><g id="node_text11" fill="black"><text id="kity_text_81" text-rendering="inherit" font-size="12" dy=".8em" y="412.7000000476837" x="632.5">NewServeMux  创建我们自己的MUX 路由器</text></g></g><g id="minder_node13"><g id="node_expander11" display="none" style="cursor: pointer;"><path id="kity_path_147" fill="white" stroke="gray" d="M626.5,527.5A6,6,0,1,1,614.5,527.5A6,6,0,1,1,626.5,527.5"></path><path id="kity_path_148" fill="none" stroke="gray"></path></g><path id="node_outline12" fill="none" stroke="none" d="M631.5,462.5h485a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-485a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z"></path><g id="node_text12" fill="black"><text id="kity_text_83" text-rendering="inherit" font-size="12" dy=".8em" y="465.7000000476837" x="636.5">通过&#xa0;Header() 来设置头map&#xa0;</text><text id="kity_text_84" text-rendering="inherit" font-size="12" dy=".8em" y="483.7000000476837" x="636.5">通过&#xa0;WriteHeader(code) 来设置状态码</text><text id="kity_text_85" text-rendering="inherit" font-size="12" dy=".8em" y="501.7000000476837" x="636.5">通过&#xa0;Write写入这个io.writer 来控制返回值</text><text id="kity_text_86" text-rendering="inherit" font-size="12" dy=".8em" y="519.7000000476837" x="636.5">通过 req.Body 以获取请求过来的body内容</text><text id="kity_text_87" text-rendering="inherit" font-size="12" dy=".8em" y="537.7000000476837" x="636.5">剩下的就是组装了 方法很多 不再一一示例 当然还有一些内置方法 比如把路径当静态显示&#xa0;</text><text id="kity_text_88" text-rendering="inherit" font-size="12" dy=".8em" y="555.7000000476837" x="636.5"></text><text id="kity_text_89" text-rendering="inherit" font-size="12" dy=".8em" y="573.7000000476837" x="636.5">http.Handle("/",http.FileServer(http.Dir("/")))</text></g></g><g id="minder_node14"><g id="node_expander14" style="cursor: pointer;"><path id="kity_path_156" fill="white" stroke="gray" d="M1307,125.5A6,6,0,1,1,1295,125.5A6,6,0,1,1,1307,125.5"></path><path id="kity_path_157" fill="none" stroke="gray" d="M1296.5,125.5L1305.5,125.5"></path></g><path id="node_outline15" fill="rgb(238, 243, 246)" stroke="rgb(115, 161, 191)" d="M1261.5,132.5h79a3,3,0,0,1,3,3v20a3,3,0,0,1,-3,3h-79a3,3,0,0,1,-3,-3v-20a3,3,0,0,1,3,-3z" stroke-width="1"></path><g id="node_text15" fill="black"><text id="kity_text_101" text-rendering="inherit" font-size="14" dy=".8em" y="136.40000009536743" x="1278.5">客户端</text></g></g><g id="minder_node15"><g id="node_expander13" display="none" style="cursor: pointer;"><path id="kity_path_153" fill="white" stroke="gray" d="M1336.5,269.5A6,6,0,1,1,1324.5,269.5A6,6,0,1,1,1336.5,269.5"></path><path id="kity_path_154" fill="none" stroke="gray"></path></g><path id="node_outline14" fill="none" stroke="none" d="M1341.5,204.5h353a5,5,0,0,1,5,5v120a5,5,0,0,1,-5,5h-353a5,5,0,0,1,-5,-5v-120a5,5,0,0,1,5,-5z"></path><g id="node_text14" fill="black"><text id="kity_text_93" text-rendering="inherit" font-size="12" dy=".8em" y="207.70000004768372" x="1346.5">分三步</text><text id="kity_text_94" text-rendering="inherit" font-size="12" dy=".8em" y="225.70000004768372" x="1346.5">创建client := &amp;http,Client{};</text><text id="kity_text_95" text-rendering="inherit" font-size="12" dy=".8em" y="243.70000004768372" x="1346.5">构造请求 requset,err := http.newRequest("方法","路径",body)</text><text id="kity_text_96" text-rendering="inherit" font-size="12" dy=".8em" y="261.7000000476837" x="1346.5">发送得到返回 res,err := client.Do(request)</text><text id="kity_text_97" text-rendering="inherit" font-size="12" dy=".8em" y="279.7000000476837" x="1346.5"></text><text id="kity_text_98" text-rendering="inherit" font-size="12" dy=".8em" y="297.7000000476837" x="1346.5"></text><text id="kity_text_99" text-rendering="inherit" font-size="12" dy=".8em" y="315.7000000476837" x="1346.5">res 处理就好了 分析下参数</text></g></g></g></g></svg>